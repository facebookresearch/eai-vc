defaults:
    - wandb: eaif
    - override hydra/launcher: local

# general inputs
env               :   ???                     # name of environment (e.g. relocate-v0)
algorithm         :   BC
pixel_based       :   True                    # pixel based (True) or state based (False) experiment
embedding         :   ???                     # choice of embedding network
camera            :   top_cap2                # choice of camera to use for image generation
device            :   cuda
data_dir          :   /checkpoint/maksymets/eaif/datasets/metaworld-expert-v0.1/
data_parallel     :   True

# experiment and evaluation
seed              :   12345                   # used as base_seed for rolling out policy for eval in sample_paths
epochs            :   100                     # number of outer epochs
eval_frequency    :   5                       # frequency of epochs for evaluation and logging
save_frequency    :   10                      # frequency of epochs for saving policies
eval_num_traj     :   25                      # number of rollouts to eval
num_cpu           :   1                       # for rolling out paths when evaluating                 
num_demos         :   25                      # path to demo file auto-inferred from other inputs
exp_notes         :   Add experiment notes here to help organize results down the road.

# environment related kwargs
env_kwargs:
    env_name      :   ${env}
    suite         :   metaworld                
    device        :   ${device}               # device to use for representation network (policy clamped to CPU for now)
    image_width   :   256
    image_height  :   256
    camera_name   :   ${camera}
    embedding_name :  ${embedding}                
    pixel_based   :   ${pixel_based}
    render_gpu_id :   0
    seed          :   ${seed}
    history_window :  3
    add_proprio   :   True
    proprio_key   :   gripper_proprio 

# BC agent setup
bc_kwargs:
    hidden_sizes  :   (256, 256, 256)
    nonlinearity  :   relu
    loss_type     :   'MSE'
    batch_size    :   256
    lr            :   1e-3
    dropout       :   0

# logging
job_name          :   metaworld_cortex_vil
wandb:
  project         :   ???
  entity          :   ???
# name            :   ${embedding}

hydra:
    job:
        name: metaworld_cortex_vil
