default:
    - override hydra/launcher: local
    - override hydra/output: local

# general inputs
env               :   None
algorithm         :   BC
pixel_based       :   True                    # pixel based (True) or state based (False) experiment
embedding         :   None                    # choice of embedding network
camera            :   None                    # choice of camera to use for image generation
device            :   cuda
data_dir          :   /private/home/aravraj/work/Projects/visual_rl/vrl_private/vrl/hydra/expert_data/resnet18_rand_paths/
# data_dir          :   auto                    # default data dir is repo/assets/expert_paths (see README.md)

# experiment and evaluation
seed              :   123                     # global seed for the experiment
epochs            :   100                     # number of outer epochs
eval_frequency    :   5                       # frequency of epochs for evaluation and logging
save_frequency    :   10                      # frequency of epochs for saving policies
eval_num_traj     :   25                      # number of rollouts to eval
num_cpu           :   1                       # for rolling out paths when evaluating                 
num_demos         :   25                      # path to demo file auto-inferred from other inputs
exp_notes         :   Franka Kitchen tasks from mj_envs stable branch 

# environment related kwargs
env_kwargs:
    env_name      :   ${env}                
    device        :   ${device}               # device to use for representation network (policy clamped to CPU for now)
    image_width   :   256
    image_height  :   256
    camera_name   :   ${camera}
    embedding_name :  ${embedding}                
    pixel_based   :   ${pixel_based}
    render_gpu_id :   0
    seed          :   ${seed}
    history_window :  1                

# BC agent setup
bc_kwargs:
  hidden_sizes    :   (256, 256, 256)
  nonlinearity    :   relu
  loss_type       :   'MSE'
  batch_size      :   256
  lr              :   1e-3
  dropout         :   0

# general outputs
job_name          :   'job'

hydra:
    job:
        name: VIL_conv_comp_runs
